server:
  replicas: 1
  image:
    repository: quay.io/argoproj/argocd
    tag: v2.10.7
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing

configs:
  secret:
    argocdServerAdminPassword: "$2b$10$VUI.Ya.cZKSJxy3Ssab4Me0AmoHz2KiUGNhD7TvRYddC6YwTDeC7i"

rbac:
  enabled: true
  create: true
    p, role:org-admin, clusters, get, *, allow
    p, role:org-admin, projects, get, *, allow
    p, role:org-admin, repositories, get, *, allow
    p, role:org-admin, logs, get, */*, allow
    p, role:org-admin, exec, create, */*, allow
    p, role:org-admin, applications, create, */*, allow
    p, role:org-admin, applications, update, */*, allow
    p, role:org-admin, applications, delete, */*, allow
    p, role:org-admin, applications, sync, */*, allow
    p, role:org-admin, applications, override, */*, allow
    p, role:org-admin, applications, action/*, */*, allow
    p, role:org-admin, clusters, create, *, allow
    p, role:org-admin, clusters, update, *, allow
    p, role:org-admin, clusters, delete, *, allow
    p, role:org-admin, projects, create, *, allow
    p, role:org-admin, projects, update, *, allow
    p, role:org-admin, projects, delete, *, allow
    p, role:org-admin, repositories, create, *, allow
    p, role:org-admin, repositories, update, *, allow
    p, role:org-admin, repositories, delete, *, allow

redis:
  enabled: true
  image:
    repository: redis
    tag: 7.0.11-alpine
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

serviceAccount:
  create: true
  name: argocd-application-controller

hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80 