apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres.fullname" . }}
  {{- if .Values.namespace }}
  namespace: {{ include "postgres.namespace" . }}
  {{- end }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainer.enabled }}
      initContainers:
        - name: init-dir
          image: {{ .Values.initContainer.image }}
          command: ["/bin/sh"]
          args: ["-c", "mkdir -p /var/lib/postgresql/data && chmod 700 /var/lib/postgresql/data"]
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - name: postgresql
              containerPort: {{ .Values.postgresql.port }}
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ include "postgres.fullname" . }}-secret
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: postgres
            - name: config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "postgres.fullname" . }}-config
