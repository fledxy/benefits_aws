{{- if .Values.grafana.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-grafana
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.grafana.replicaCount }}
  selector:
    matchLabels:
      app: grafana
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: grafana
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: grafana
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
          imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.grafana.adminUser }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.grafana.adminPassword }}
            - name: GF_INSTALL_PLUGINS
              value: "grafana-piechart-panel,grafana-worldmap-panel"
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: storage
              mountPath: /var/lib/grafana
          resources:
            {{- toYaml .Values.grafana.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-grafana-config
        - name: storage
          {{- if .Values.grafana.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-grafana
          {{- else }}
          emptyDir: {}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-grafana
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
    release: {{ .Release.Name }}
spec:
  type: {{ .Values.grafana.service.type }}
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: grafana
    release: {{ .Release.Name }}
---
{{- if .Values.grafana.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-grafana
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
    release: {{ .Release.Name }}
  {{- with .Values.grafana.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.grafana.ingress.tls }}
  tls:
    {{- range .Values.grafana.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.grafana.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $.Release.Name }}-grafana
                port:
                  number: {{ .servicePort }}
          {{- end }}
    {{- end }}
{{- end }}
{{- end }} 