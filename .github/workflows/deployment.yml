name: Build, Push and Deploy to Kubernetes

on:
  push:
    branches:
      - main # Trigger action on pushes to main branch
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
       - name: Checkout repository
         uses: actions/checkout@v3

       - name: Set up Python
         uses: actions/setup-python@v4
         with:
           python-version: '3.x'
   
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v2
   
       - name: Log in to Docker container Registry
         uses: docker/login-action@v3
         with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}

       - name: Build Docker image
         run: |
             docker build -f app.api/app.Dockerfile  -t fledxy/fledxy_application:${{ github.sha }} .
           
       - name: Push Docker image to Docker hub
         run: |
             docker push fledxy/fledxy_application:${{ github.sha }}
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
        
        - name: Terraform init
          run: terraform init -var-file=app.tf/envs/dev.tfvars

        - name: Terraform plan
          run: terraform plan -var-file=app.tf/envs/dev.tfvars

        - name: Terraform apply for dev environment 
          run: terraform apply -auto-approve -var-file=app.tf/envs/dev.tfvars

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }} 
            
        - name: Update kube config
          run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
      
        - name: Deploy to EKS
          run: |
              kubectl apply -f app.api/k8s/manifest.yaml
