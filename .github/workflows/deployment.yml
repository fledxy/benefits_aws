name: Build, Push and Deploy to Kubernetes

on:
  push:
    branches:
      - main # Trigger action on pushes to main branch
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
       - name: Checkout repository
         uses: actions/checkout@v3

       - name: Set up Python
         uses: actions/setup-python@v4
         with:
           python-version: '3.x'
   
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v2
   
       - name: Log in to Docker container Registry
         uses: docker/login-action@v3
         with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}

       - name: Build Docker image
         run: |
             docker build -f app.api/app.Dockerfile  -t fledxy/fledxy_application:${{ github.sha }} .
           
       - name: Push Docker image to Docker hub
         run: |
             docker push fledxy/fledxy_application:${{ github.sha }}
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
        
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }} 
            
        # - name: Create EKS
        #   run: eksctl create cluster --name=fledxy_eks --enable-auto-mode

        - name: Update kube config
          run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
      
        - name: Apply Kubernetes manifest
          run: |
              if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
                echo "ENV=prod" >> $GITHUB_ENV
              elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
                echo "ENV=dev" >> $GITHUB_ENV
              fi
              echo "Namespace is: ${{ env.ENV }}"
              kubectl apply -f k8s/manifest.yaml --namespace=${{ env.ENV }}
